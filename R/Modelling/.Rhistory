class(dt_combined[order(-tweet_actions)][1:5,])
as.data.table(dt_combined[order(-tweet_actions)][1:5,])
top_tweets
input_name
top_tweets
top_tweets$bull_market
to_save_to
to_save_to
top_tweets
which(input_name, search_terms) 
grepl(input_name, search_terms)
grep(input_name, search_terms)
top_tweets
str(dt_combined)
ä <- copy(dt_combined)
dt3
dt3
length(tweet_data)
combined_data
names()
ccombined_data
ccombined_data
identical(combined_data, ccombined_data)
names(dt3)
combined_data
dt_combined
dt_combined[100:150]
dt_combined[100:150, ]
head(dt_combined, n=250)
library(DT)
DT::datatable(dt_combined[1:3000])
DT::datatable(dt_combined)
class(dt_combined)
class(dt_combined)
DT::datatable(dt_combined)
myfun
lsos()
ls()
a
b
a
names(dt_combined)
dt3
class(dt3)
class(dt3)
dt3
seq(5, 12)
)
dt3
dt3
dt3
dt3
dt4
length(seq(as.Date("2013-01-14"), as.Data("2015-09-11")))
length(seq(as.Date("2013-01-14"), as.Date("2015-09-11")))
length(seq(as.Date("2013-01-14"), as.Date("2015-09-11"), by = "day"))
top_tweets
i
i=2
input_name
top_tweets
i=1
top_tweets
top_tweets
i=3
top_tweets
i
i=4
str(top_tweets)
i=5
str(top_tweets)
i
i=6
str(top_tweets)
i
i=7
i
i=8
i
i=9
ls.str(top_tweets)
glimpse(top_tweets)
i
 str(top_tweets)
i
i=10
i
i=11
i
i=12
i
i=13
str(top_tweets)
save(top_tweets, file = "top_tweets_stats.rda")
as.data.table(data$dates)
dim(as.data.table(data$dates))
x <- seq(as.Date("2013-01-14"), as.Date("2015-09-11"), by = "day")
as.data.table(x)
data$day.number
num_vars
?subset
?subset.data.table
?plot
data.table(a=1:5, b=5:9, c=c(3, 1, NULL))
data.table(a=1:5, b=5:9, c=c(1, 2, NULL))
x <- data.table(a=1:5, b=5:9, c=c(1, 2, NULL))
x
y <- subset(x, select = c(1, 2))
y
y[c(1, 3, 5), a:=999]
x
y
lsos()
bull_market
bull_market
library(pastecs)
identical(x, sent$bull_market_avg)
x
sent$bull_market_avg
y <- data.table(x, sent$bull_market_avg)
y
)
21/6
19.5/5
x <- data.table(pos = sent$bull_market_Sentistrength_pos, neg = sent$bull_market_Sentistrength_neg)
x
x[, avg := mean(pos, neg)]
x[, avg := lapply(.SD, mean), .SDcols = c("pos", "neg")]
x[, avg := lapply(.SD, rowSums/2), .SDcols = c("pos", "neg")]
x[, avg := apply(.SD, mean), .SDcols = c("pos", "neg")]
x[, avg := apply(.SD, 1, mean), .SDcols = c("pos", "neg")]
x
x$my_avg <- rowSums(x[, .(pos, neg)])
x
mean(0.11014493, -0.10579710)
mean(c(0.11014493, -0.10579710))
x$my_avg <- rowSums(x[, .(pos, neg)])/2
x
x$original <- bull_market$SentiStrength
x
str(sent_stats)
sent_stats$dow_jones
dow_jones
dow_jones
sent_stats$dow_jones
str(sent_minmax)
str(sent_minmax)
scaled_sent
length(scaled_sent)
length(scaling_factors)
length(sent)
names(sub_sent)
78*2
length(sent_stats)
length(sent_stats[[1]])
sent_stats$dow_jones
length(sent_stats[[1]][[1]])
length(sent_stats$bull_market$Emolex)
sent_stats$bull_market$Emolex
sent_minmax
sent_stats$dow_jones$Vader
sent_minmax$bull_market$Vader
sent_stats$dow_jones
sent_minmax$dow_jones
head(scaling_factors)
minmax$dow_jones
head(minmax)
minmax$dow_jones
sent_stats$dow_jones
mod_names
search_names
scaling_factors
scaling_factors
minmax[[1]]
minmax[[1]][[2]]
max(abs(minmax[[1]][[2]]))
scaling_factors
scaling_factors
names(sent)
names(sub_sent)
13*5
make_boobs_bigger(viivi, silicone)
make_boobs_bigger(viivi, silicone)
viivi
viivi
make_boobs_bigger(viivi, silicone)
viivi
viivi <- make_boobs_bigger(viivi, silicone)
viivi
viivi <- make_boobs_bigger(viivi, silicone)
dow_jones
scaling_factors$dow_jones
max(abs(dow_jones))
max(abs(dow_jones$Sentiment140))
max(abs(dow_jones$SentiStrength))
bear_market
search_names
names(minmax)
SA_scores
SA_scores
nameS(SA_scores)
name(SA_scores)
names(SA_scores)
names(SA_scores)
bear_market
bear_market
bear_market
names(minmax)
names(minmax$bear_market)
minmax$bear_market
scaling_factors$bear_market
max(abs(bear_market$bear_market_Emolex))
mod_names
bear_market
bear_market
SA_scores_non_scaled
sent_stats
SA_scores_non_scaled
lsos()
lsos(n=50)
rm(list=ls())
sent_stats
SA_scores_non_scaled
class(sent_stats$bull_market)
SA_scores_non_scaled
sum(is.na(SA_scores_non_scaled))
nameS(sent_stats)
names(sent_stats)
names(sent_stats$dow_jones)
mod_names
sent_minmax
sent_minmax
sent_minmax
sent_minmax[[1]]
sent_minmax$bull_market
scaling_factors$bull_market$Emolex
SA_scores_non_scaled$bull_market$Emolex
ä <- unlist(SA_scores_non_scaled)
str(ä)
head(ä)
ä <- unlist(SA_scores_non_scaled, recursive = FALSE)
head(ä)
names(ä)
class(ä)
ää <- as.data.table(ä)
names(ää)
max(abs(ää$dow_SPDR.Emolex))
scaling_factors$dow_SPDR$Emolex
sent_minmax$bull_market$Emolex
sent_minmax$dow_SPDR$Emolex
SA_scores_non_scaled$bull_market$Emolex
names(SA_scores_non_scaled)
names(scaling_factors)
names(SA_scores_non_scaled$bull_market)
names(scaling_factors$bull_market)
SA_scores_scaled
scaling_factors
names(scaling_factors)
names(scaling_factors$bull_market)
names(SA_scores_non_scaled)
names(SA_scores_non_scaled$bull_market)
names(SA_scores_scaled)
names(SA_scores_scaled$bull_market)
names(SA_scores) 
names(SA_scores) 
ä <- unlist(SA_scores_scaled)
names(ä)
names(SA_scores_scaled)
SA_scores_scaled$bull_market
)
SA_scores_scaled[[1]][[5]]
SA_scores_scaled[[1]][[1]]
SA_scores_non_scaled[[1]][[1]]
scaling_factors[[1]][[1]]
head(scaling_factors[[1]][[2]])
head(SA_scores_non_scaled[[1]][[1]])
head(SA_scores_non_scaled[[1]][[2]])
head(SA_scores_non_scaled[[5]][[2]])
head(SA_scores_non_scaled[[5]][[5]])
head(SA_scores[[5]][[5]])
SA_scores
class(SA_scores_scaled)
names(SA_scores_scaled)
for(i in 1:13){print(head(SA_scores_scaled[[i]]))}
SA_scores_scaled$bull_market
scaling_factors$bull_market
SA_scores_non_scaled$bull_market
SA_scores_non_scaled$bull_market[[1]]
class(SA_scores_non_scaled$bull_market[[1]])
ä <- SA_scores_non_scaled$bull_market[[1]]
ää <- ä / scaling_factors$bull_market$Emolex
head(ää)
SA_scores_scaled$bull_market$Emolex <- ää
class(SA_scores_non_scaled$bull_market[[1]])
SA_scores_scaled$bull_market
SA_scores_scaled$bull_market$Emolex
str(SA_scores_scaled)
str(SA_scores_scaled)
13*5
ä <- unlist(SA_scores_scaled)
str(ä)
dim(ä)
length(ä)
ä <- as.data.table(SA_scores_scaled)
dim(ä)
ä
str(ä)
ä <- as.data.table(SA_scores_scaled, recursive = TRUE)
names(ä)
ä$bull_market
dim(sent_scaled)
str(sent_scaled)
identical(sent_scaled1, sent_scaled2)
str(sent_scaled2)
identical(sent_scaled1, sent_scaled2)
str(sent_scaled2)
str(sent_scaled1)
?rbindlist
DT1
DT2
l
?mapply
dim(sent_scaled)
class(sent_scaled)
str(sent_scaled)
class(sent_scaled$Emolex)
dim(sent_scaled)
ä <- unlist(SA_scores_scaled[[1]])
str(ä)
str(ä)
ää <- rbindlist(ä)
 ää <- Reduce(cbind, ä)
str(ää)
 ää <- Reduce(function(x) cbind(as.data.table(x)), ä)
str(ä)
names(ä)
class(ä$Emolex)
ü <- as.data.table(ä$Emolex)
ü
ää <- sapply(ä, function(x) x)
str(ää)
class(ää)
head(ää)
ää <- as.data.table(sapply(ä, function(x) x))
ää
names(ää)
str(sent_scaled)
str(sent_scaled)
sent_scaled
names(SA_scores_scaled)
names(SA_scores_scaled)[1]
names(SA_scores_scaled)[2]
mod_names
i=1
this_subset
this_subset
this_subset
sent_scaled
i
this_subset
sent_scaled
names(sent_scaled)
names(sent_scaled)
13*5
i=1
this_subset
head(SA_scores_scaled$bear_market$Emolex)
this_subset
sent_scaled
i=2
this_subset
str(sent_scaled)
str(sent_scaled)
str(sent_scaled)
dim(sent_scaled)
class(sent_scaled)
length(seq(as.Date("2013-01-14"), as.Date("2015-09-11"), by = "day"))
names(sent_scaled)
seq(5*i - 4, 5*i)
i=1
i=2
searchTerms
daily_scores
class(daily_scores)
class(daily_scores$bull_market)
daily_scores
class(daily_scores)
dim(daily_scores)
daily_scores[[1]]
daily_scores[[2]]
daily_scores
searchTerms
as.list(searchTerms)
)
daily_scores
daily_scores
daily_scores
daily_scores
daily_scores
searchTerms
rm(daily_scores)
daily_scores
daily_scores
daily_scores
warnings()
daily_scores
daily_scores
daily_scores[[2]]
daily_scores
daily_scores
daily_scores[[1]]
daily_scores[5]
daily_scores[[5]]
daily_scores
daily_scores
names(daily_scores)
daily_scores
daily_scores
daily_scores
daily_scores
3000/750
names(daily_scores)
dim(daily_scores)
daily_scores
daily_scores[, print(max(abs(.SDcol)))]
daily_scores[, print(max(abs(.SDcols)))]
daily_scores[, print(max(abs(.SDcol))), .SDcol = as.vector(names(daily_scores))]
daily_scores[, print(max(abs(.SDcols))), .SDcols = as.vector(names(daily_scores))]
daily_scores[, print(max(abs(.SD))), .SDcols = as.vector(names(daily_scores))]
names(daily_scores)
daily_scores[, print(max(abs(.SDcols))), .SDcols = as.vector(names(daily_scores))]
daily_scores[, lapply(print(max(abs(.SD)))), .SDcols = as.vector(names(daily_scores))]
daily_scores
daily_scores
daily_scores$oil_prices
names(daily_scores)
names(daily_scores)
daily_scores$oil_prices
SA_scores_non_scaled$oil_prices
sent$oil_prices_Vader
sent$oil_prices_Emolex
sent$oil_prices_Sentiment140
sent_stats$oil_prices
load("/Volumes/Mac\ OS\ Drive/Thesis/Source\ Code/R/Modelling/raw_data/sentiment_data_weighted.rda")
lsos()
str(weighted_sentiment)
lsos()
weighted_sentiment$oil_prices_Vader
ä <- load("/Volumes/Mac\ OS\ Drive/Thesis/Source\ Code/R/Modelling/raw_data/sentiment_data.rda")
lsos()
nameS(data)
names(data)
data$dates
lsos()
rm(list=ls())
names(sent_scaled)
sent_scaled$oil_prices.Emolex
sum(sent_scaled$oil_prices.Emolex == 0)
sum(sent_scaled$oil_prices.SentiStrength == 0)
sum(sent_scaled$oil_prices.Sentiment140 == 0)
sum(sent_scaled$federal_reserve.Sentiment140 == 0)
sum(sent_scaled$federal_reserve.SentiStrength == 0)
sum(sent_scaled$federal_reserve.Emolex == 0)
sum(sent_scaled$obama_economy.Emolex == 0)
sum(sent_scaled$obama_economy.Sentiment140 == 0)
sum(sent_scaled$obama_economy.SentiStrength == 0)
sum(sent_scaled$dow_jones.SentiStrength == 0)
sum(sent_scaled$dow_jones.Emolex == 0)
class(daily_avg_scores)
daily_avg_scores
daily_avg_scores
daily_avg_scores
dim(daily_avg_scores)
names(daily_avg_scores)
lsos()
rm(list=setdiff(ls(), c("daily_avg_scores", "sent_scaled", "sent", "sub_sent")))
lsos()
names(sent)
sent$dates
lsos()
names(sent_scaled)
names(sub_sent)
names(sent)
rm(list=ls())
lsos()
names(data_dirty)
122-150
sum(is.na(data_dirty))
data_dirty$dates
lsos()
data_dirty$dates
names(data_dirty)
load("/Volumes/Mac\ OS\ Drive/Thesis/Source\ Code/R/Modelling/raw_data/sentiment_data_scaled.rda")
lsos()
names(sent_scaled)
getSymbols("DJI^A")
getSymbols("DJIA")
lsos()
DJIA
as.data.table(DJIA)
