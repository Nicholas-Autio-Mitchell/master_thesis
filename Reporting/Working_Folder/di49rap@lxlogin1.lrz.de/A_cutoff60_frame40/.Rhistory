getwd()
library(mboost)
library(caret)
library(data.table)
library(multilevelPSA)
library(doParallel)
this_folder <- getwd()
load(paste0(this_folder, "/subsets_lagged.rda"))
source(paste0(this_folder, "/corr_pruner.R"))
source(paste0(this_folder, "/error_functions.abs.R"))
source(paste0(this_folder, "/results_template.abs.R"))
source(paste0(this_folder, "/ultra_modeller.abs.R"))
library(doParallel)
registerDoParallel(8)
input_data <- sapply(c("Lag.1", "Lag.2", "Lag.3", "Lag.4", "Lag.5"), function(x) NULL)
input_subsets <- sapply(c("trad_small", "trad_large", "sent_small", "sent_large", "combined"), function(x) NULL)
for(i in 1:length(input_data)){input_data[[i]] <- input_subsets}
source(paste0(this_folder, "/ultra_modeller.abs.R"))
abs_model()
abs_model
input_data <- sapply(c("Lag.1", "Lag.2", "Lag.3", "Lag.4", "Lag.5"), function(x) NULL)
input_subsets <- sapply(c("trad_small", "trad_large", "sent_small", "sent_large", "combined"), function(x) NULL)
for(i in 1:length(input_data)){input_data[[i]] <- input_subsets}
raw_data <- copy(subsets_lagged)
for(i in 1:5) {
message(paste0("++ ----  ", names(raw_data)[i], "  ---- ++"))
for(j in 1:5) {
input_data[[i]][[j]] <- corr_pruner(raw_data[[i]][[j]],
cutoff = 0.6,
plot = FALSE,
print.removed = FALSE,
s_name = names(input_data[[i]])[j])
}
}
input_data.one_list <- unlist(input_data, recursive = FALSE)
output_names <- names(input_data.one_list)
all_results.abs.cutoff60.frame40 <- foreach(i = 1:(length(input_data.one_list)),
.combine = append,
.packages = c("mboost", "caret", "data.table")) %dopar%
{
tmp_results <- abs_model(input_data.one_list[[i]], nIter = 1200,
shrinkage = 0.05, frame_size = 40)
to_save <- paste0("abs_results.", as.character(names(input_data.one_list)[[i]])) #desired name
assign(to_save, tmp_results)    #assign data to desired name
file_name <- paste0(to_save, ".rda") #create desired file name
save(list = to_save, file = file_name) #save data with desired names
## Create a list of the results which is then appended to in ever foreach() loop
par_results <- list(tmp_results)
names(par_results) <- paste0(names(input_data.one_list[i]))
return(par_results)
}
## Save large object holding all results
save(all_results.abs.cutoff60.frame40, file = paste0(this_folder, "/all_results.abs.cutoff60.frame40.rda"))
(length(input_data.one_list)
)
1:length(input_data.one_list)
names(input_data.one_list[i]
)
i
this_folder
all_results.abs.cutoff60.frame40 <- foreach(i = 1:length(input_data.one_list),
.combine = append,
.packages = c("mboost", "caret", "data.table")) %dopar%
{
tmp_results <- abs_model(input_data.one_list[[i]], nIter = 1200,
shrinkage = 0.05, frame_size = 40)
to_save <- paste0("abs_results.", as.character(names(input_data.one_list)[[i]])) #desired name
assign(to_save, tmp_results)    #assign data to desired name
file_name <- paste0(to_save, ".rda") #create desired file name
save(list = to_save, file = file_name) #save data with desired names
## Create a list of the results which is then appended to in ever foreach() loop
par_results <- list(tmp_results)
names(par_results) <- paste0(names(input_data.one_list[i]))
return(par_results)
}
registerDoParallel(8)
