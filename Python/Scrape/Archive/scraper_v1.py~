# Combined original code with the tutorial: http://www.marinamele.com/selenium-tutorial-web-scraping-with-selenium-and-python

import logging
import sys
import time

from time import strftime
#from datetime import datetime

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import NoAlertPresentException

STATUS_OK      = 0
STATUS_ERROR   = 1
STATUS_FAILURE = 2

#############  operating system dependent links  #####################
## ------------- System paths ----------------------------------------
#output_windows = 'C:\\Users\\dev231\\Box Sync\\' + start_date + '_til_' + end_date + '.txt'
output_mac = '/Users/nicholasmitchell/Volumes/Mac OS Drive/Documents/Box/' + start_date + '_til_' + end_date + '.txt'
##
# ------------- Use a minimalistic firefox profile ------------------
#lite_profile_windows = webdriver.FirefoxProfile('"C:\\Users\\dev231\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\o28gcy68.Lite-Firefox\\"')
lite_profile_mac = webdriver.FirefoxProfile("/Users/nicholasmitchell/Library/Application Support/Firefox/Profiles/wrp6us7q.Lite")
######################################################################


# Create the url - assuming we are always moving backwardsd into time
# '%20' is a space in a url
search_term = 'Dow%20Jones'
start_date = '2014-06-01'
end_date = '2014-05-30'
url = 'https://twitter.com/search?q=' + search_term + '%20-abre%20lang%3Aen%20since%3A' + end_date + '%20until%3A' + start_date + '&src=typd'


print("******* Defining functions - " + strftime("%Y-%m-%d %H:%M:%S") + " *******")

class Scraper:

    def init_driver(self):
        self.driver = webdriver.Firefox(lite_profile_mac)
        self.driver.implicitly_wait(30)
        self.base_url = url
        self.verificationErrors = []
        self.accept_next_alert = True
        
    def scrape(self):
        driver = self.driver
        delay = 30
        driver.get(self.base_url)

        scroll_begin = time.time()
        for i in range(1,5):
            self.driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(1)
        scroll_end = time.time()
        
        print("******* Created Firefox instance and finished scrolling. Now creating and saving output file - " + strftime("%Y-%m-%d %H:%M:%S") + " *******")

        copy_source_begin = time.time()
        outputFile = open(output_mac, "w")
        outputFile.write(driver.page_source.encode('utf-8'))
        outputFile.close()
        copy_source_end = time.time()

        time.sleep(3)
        driver.quit()
        
        print("******* Finished saving output file... Closing Firefox instance - " + strftime("%Y-%m-%d %H:%M:%S") + " *******")


start_time = time.time()
scrape_session = Scraper()
scrape_session.init_driver()
scroll_begin, scroll_end, copy_source_begin, copy_source_end = scrape_session.scrape()

scroll_time = str(scroll_end - scroll_begin)
data_write_time = str(copy_source_end - copy_source_begin)
total_time_elapsed = str(time.time() - start_time)

print("Time taken = " + scroll_time + " seconds")
print("Time taken = " + data_write_time + " seconds")
print("Time taken = " + total_time_elapsed + " seconds")
